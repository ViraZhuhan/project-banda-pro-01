{"mappings":"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","sources":["src/js/api.js","src/js/get-refs.js","src/js/weekly-trends.js","src/js/mobile-menu.js","src/js/themeToggle.js","src/js/header.js","src/js/upcoming.js","src/js/modal-team.js"],"sourcesContent":["const MOVIE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = '225e339996bc91260b33199c383c8881';\n\n// as looking by id\nconst example = `${MOVIE_URL}movie/550?api_key=${API_KEY}`;\n\n// all - movie - tv - person | week - day |\nconst dayRoute = `${MOVIE_URL}trending/all/dayRoute?api_key=${API_KEY}`;\nconst weekRoute = `${MOVIE_URL}trending/all/week?api_key=${API_KEY}`;\n\n// genres\nconst genresRoute = `${MOVIE_URL}/genre/movie/list?api_key=${API_KEY}`;\n\n// genres\nconst countriesRoute = `${MOVIE_URL}configuration/countries?api_key=${API_KEY}`;\n\n//\nconst upcoming = `${MOVIE_URL}movie/upcoming?api_key=${API_KEY}`;\n\nexport default class Api {\n  constructor() {\n    this.page = 1;\n  }\n\n  nextPage() {\n    this.page += 1;\n  }\n  prevPage() {\n    this.page -= 1;\n  }\n  setPage(value) {\n    this.page = value;\n  }\n  getCurrentPage() {\n    return this.page;\n  }\n  reset() {\n    this.page = 1;\n  }\n\n  async dayTrends() {\n    try {\n      const response = await fetch(`${dayRoute}&page=${this.page}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie data: ' + error);\n    }\n  }\n\n  async weekTrends() {\n    try {\n      const response = await fetch(`${weekRoute}&page=${this.page}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie data: ' + error);\n    }\n  }\n\n  async upcoming() {\n    try {\n      const response = await fetch(`${upcoming}&page=${this.page}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie data: ' + error);\n    }\n  }\n\n    async getDetailsById(id) {\n    const str = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    await new Promise(r => setTimeout(r, 1000));\n    return fetch(str).then(res => res.json());\n  }\n\n  async fetchGenres() {\n    try {\n      const response = await fetch(genresRoute);\n      const data = await response.json();\n      return data.genres;\n    } catch (error) {\n      throw new Error('Error fetching genres data: ' + error);\n    }\n  }\n\n    async countries() {\n    await new Promise(r => setTimeout(r, 1000));\n    return fetch(`${countriesRoute}&page=${this.page}`).then(res => res.json());\n  }\n\n  async searhByNameYear(obj = {}) {\n    let str = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&include_adult=false`;\n\n    const keys = Object.keys(obj);\n\n    if (keys.length !== 0) {\n      for (const key of keys) {\n        if (\n          ((key === 'year' || key === 'query' || key === 'page') &&\n            obj[key]) !== null\n        ) {\n          str += `&${key}=${obj[key]}`;\n        }\n      }\n    }\n    await new Promise(r => setTimeout(r, 1000));\n    return fetch(str).then(res => res.json());\n  }\n\n}\n\n\n// export default class ApiServer {\n//   #API_KEY = '225e339996bc91260b33199c383c8881';\n//   #dayTops = 'https://api.themoviedb.org/3/trending/all/day?';\n//   #weekTops = 'https://api.themoviedb.org/3/trending/all/week?';\n//   #upcoming = 'https://api.themoviedb.org/3/all/upcoming?&language=en-US';\n\n//   constructor() {\n//     this.page = 1;\n//   }\n\n//   nextPage() {\n//     this.page += 1;\n//   }\n//   prevPage() {\n//     this.page -= 1;\n//   }\n//   setPage(value) {\n//     this.page = value;\n//   }\n//   getCurrentPage() {\n//     return this.page;\n//   }\n//   reset() {\n//     this.page = 1;\n//   }\n\n//   // [] для фильма дня\n//   async dayTrends() {\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(\n//       `${this.#dayTops}api_key=${this.#API_KEY}&page=${this.page}`\n//     ).then(res => res.json());\n//   }\n\n//   // [] для фильмов недели\n//   async weekTrends() {\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(\n//       `${this.#weekTops}api_key=${this.#API_KEY}&page=${this.page}`\n//     ).then(res => res.json());\n//   }\n\n//   // [] для новинок\n//   async upcoming() {\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(\n//       `${this.#upcoming}&api_key=${this.#API_KEY}&page=${this.page}`\n//     ).then(res => res.json());\n//   }\n\n//   // {} для модалки с полной инфо\n//   async getDetailsById(id) {\n//     const str = `https://api.themoviedb.org/3/movie/${id}?api_key=${\n//       this.#API_KEY\n//     }`;\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(str).then(res => res.json());\n//   }\n\n//   // [] список всех стран\n//   async countries() {\n//     const str = `https://api.themoviedb.org/3/configuration/countries?api_key=${\n//       this.#API_KEY\n//     }`;\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(str).then(res => res.json());\n//   }\n\n//   // [] список всех жанров\n//   async fetchGenres() {\n//     const str = `https://api.themoviedb.org/3/genre/movie/list?api_key=${\n//       this.#API_KEY\n//     }&language=en-US`;\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(str).then(res => res.json());\n//   }\n\n//   // [] поиск по назв, год, стр, принимает {query: string, year: int, page: int}\n//   // фильтровать по: | 'release_date' | 'genre_ids' | 'origin_country'(не везде)\n//   async searhByNameYear(obj = {}) {\n//     let str = `https://api.themoviedb.org/3/search/movie?api_key=${\n//       this.#API_KEY\n//     }&language=en-US&include_adult=false`;\n\n//     const keys = Object.keys(obj);\n\n//     if (keys.length !== 0) {\n//       for (const key of keys) {\n//         if (\n//           ((key === 'year' || key === 'query' || key === 'page') &&\n//             obj[key]) !== null\n//         ) {\n//           str += `&${key}=${obj[key]}`;\n//         }\n//       }\n//     }\n\n//     await new Promise(r => setTimeout(r, 1000));\n//     return fetch(str).then(res => res.json());\n//   }\n// }\n","\n\nexport default function getRefs () {\n    return {\n        rating: document.querySelectorAll('.rating'),\n        wrapper: document.querySelector('.article__list'),\n        gallery: document.querySelector('.gallery')\n      };\n}\n\nconst refs = {\n  body: document.querySelector('body'),\n  closeModalBtn: document.querySelector('.modal__close-btn'),\n  modal: document.querySelector('.modal'),\n  backdrop: document.querySelector('.backdrop'),\n  footerLink: document.querySelector('.team__modal-open'),\n  footerBackdrop: document.querySelector('[data-action=\"deleted-class\"]'),\n  modalCloseBtn: document.querySelector('.footer-modal__close-btn'),\n  watchedBtn: document.querySelector('button[name=watched]'),\n};\n\n","import Api from './api';\nimport getRefs from './get-refs';\n\nconst weeklyTrendsApi = new Api();\nconst refs = getRefs();\n\n// ======================================================\nfunction initRatings() {\n  if (refs.rating.length > 0) {\n    for (let index = 0; index < refs.rating.length; index++) {\n      const ratingElement = refs.rating[index];\n      initRating(ratingElement);\n    }\n  }\n}\n\nfunction initRating(rating) {\n  const ratingActive = rating.querySelector('.rating__active');\n  const ratingValue = rating.querySelector('.rating__value');\n  const ratingItems = rating.querySelectorAll('.rating__item');\n\n  ratingItems.forEach(item => {\n    item.addEventListener('click', () => {\n      ratingValue.innerHTML = item.value;\n      setRatingActiveWidth(ratingActive, ratingValue);\n    });\n  });\n  setRatingActiveWidth(ratingActive, ratingValue);\n}\n\nfunction setRatingActiveWidth(ratingActive, ratingValue) {\n  const ratingActiveWidth = ratingValue.innerHTML / 0.025;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n// ===================================================\nasync function renderWeeklyTrends() {\n  try {\n    const data = await weeklyTrendsApi.weekTrends();\n    const movies = data.results.slice(0, 3);\n\n    const genres = await weeklyTrendsApi.fetchGenres();\n\n    const moviesElements = movies.map(movie => {\n      const { poster_path, title, vote_average, release_date, genre_ids } =\n        movie;\n\n      const voteAverage = vote_average;\n\n      const release = new Date(release_date).getFullYear();\n\n      const movieGenres = genres\n        .filter(genre => genre_ids.includes(genre.id))\n        .map(genre => genre.name);\n\n      const imageUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n        : 'https://via.placeholder.com/395x574?text=No+Image';\n\n      return `\n        <li class=\"article__item\">\n        <article>\n        <img class=\"article__img\" src=\"${imageUrl}\" alt=\"${title}\" width=\"395\" >\n          <div class=\"details\">\n            <p class=\"title__txt\">${title}</p>\n            <div class=\"wraper__details\">\n            <p class=\"movieGenres\">${movieGenres\n              .slice(0, 2)\n              .join(', ')} | ${release}</p>\n            \n            <div class=\"rating\">\n              <div class=\"rating__body\">\n              <div class=\"rating__active\" style=\"width: ${\n                voteAverage * 10\n              }%;\"></div>>\n                <div class=\"rating__items\">\n                  <input type=\"radio\" class=\"rating__item\" value=\"1\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"2\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"3\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"4\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"5\" name=\"rating\" />\n                </div>\n              </div>\n              <div class=\"rating__value\">${voteAverage}</div>\n            </div>\n            </div>\n          </div>\n        </article>\n          \n        </li>\n      `;\n    });\n\n    refs.wrapper.innerHTML = moviesElements.join('');\n    initRatings();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nrenderWeeklyTrends();\n","export default (() => {\n  console.log('hello');\n  const mobileMenu = document.querySelector('.mobile-menu');\n  const headerContainer = document.querySelector('.header-menu');\n  const openMenuBtn = document.querySelector('.menu-open');\n  /* const closeMenuBtn = document.querySelector('.menu-close'); */\n  const body = document.getElementsByTagName('body')[0];\n  const linkButton = document.querySelectorAll('.navigation-menu__link');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      headerContainer.getAttribute('aria-expanded') === 'true' || false;\n    headerContainer.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.setAttribute('aria-hidden', isMenuOpen);\n    headerContainer.classList.toggle('opened');\n    mobileMenu.classList.toggle('is-hidden');\n    body.classList.toggle('scroll-block');\n\n    /* const scrollLockMethod = !isMenuOpen\n      ? \"disableBodyScroll\"\n      : \"enableBodyScroll\";\n    bodyScrollLock[scrollLockMethod](document.body); */\n  };\n\n  const hideOnClickOutside = e => e.target === e.currentTarget && toggleMenu();\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  /* closeMenuBtn.addEventListener('click', toggleMenu); */\n  linkButton.forEach(button => button.addEventListener('click', toggleMenu));\n  mobileMenu.addEventListener('click', hideOnClickOutside);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.add('is-hidden');\n    headerContainer.setAttribute('aria-expanded', false);\n    headerContainer.classList.remove('opened');\n    body.classList.remove('scroll-block');\n    /* bodyScrollLock.enableBodyScroll(document.body); */\n  });\n})();\n","// Switch theme by changing root element class based on checkbox input state\nexport default (() => {\n  const html = document.documentElement;\n  const savedTheme = localStorage.getItem('color-theme');\n  const switcher = document.querySelector('.switch input[type=\"checkbox\"]');\n  if (savedTheme === 'light') switcher.checked = true;\n  switcher.addEventListener('input', () => {\n    const theme = html.className;\n    html.className = theme === 'dark' ? 'light' : 'dark';\n    localStorage.setItem('color-theme', html.className);\n  });\n})();\n","// Higlights active link in navigation menu / mobile menu\nexport default (() => {\n  const pageLinks = document.querySelectorAll('.navigation__link');\n  const pageLinksMobile = document.querySelectorAll('.navigation-menu__link');\n  const currentPath = window.location.href;\n  pageLinks.forEach(link => {\n    if (link.href === currentPath) {\n      link.classList.add('navigation__link--current');\n      return;\n    }\n    link.classList.remove('navigation__link--current');\n  });\n  pageLinksMobile.forEach(link => {\n    if (link.href === currentPath) {\n      link.classList.add('navigation-menu__link--current');\n      return;\n    }\n    link.classList.remove('navigation-menu__link--current');\n  });\n})();\n","import Api  from './api';\nconst refs = {\n  galleryOfNewMovies: document.querySelector('.upcoming'),\n  remindBtn: document.querySelector('.upcoming__button')\n  \n}\nconst newMovies = new Api();\n\nfetchUpcomingMovie().then(renderUpcomingMovieCard)\n.catch(er =>console.log(er.message));\nrenderUpcomingMovieCard();\n\n// fetchUpcomingGenre().then(renderUpcomingGenre).catch(er => console.log(er.message));\n\nexport function fetchUpcomingMovie(){ \nreturn newMovies.upcoming()\n}; \n\nexport function renderUpcomingMovieCard(res){\n  console.log(res);\nconst markup = createUpcomingCard(res.results.slice(0,1))\nconsole.log(markup);\nrefs.galleryOfNewMovies.insertAdjacentHTML('beforeend', markup);\n}\n\n\nfunction createUpcomingCard(results) {\n  console.log(results);\n  return results.map(({backdrop_path, original_title, release_date, vote_average, vote_count, popularity, genre_ids, overview })=>{\n    return `<div class=\"upcoming__info\"> \n  <img src=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" alt=\"${original_title}\"  loading=\"lazy\" class=\"upcoming__img\" />\n  <div class=\"upcoming__info-btn\">\n  <div class=\"upcoming__info-layout\">\n  <h3 class =\"upcoming__movie-title\"><span class=\"upcoming__item-font-title\">${original_title}</span></h3>\n  <div class=\"upcoming__list-tablet\">\n  <ul class=\"upcoming__list\">\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-date\">Release date </span><span class=\"upcoming__item-data\">${release_date}</span></li>\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-vote\">Vote/Votes </span><span class=\"upcoming__item-vote\">${vote_average}</span>  /  <span class=\"upcoming__item-votes\">${vote_count}</span></li>\n  </ul>\n  <ul class=\"upcoming__list\">\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-popularity\">Popularity </span><span class=\"upcoming__item-pop\">${popularity}</span></li>\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-genre\">Genre </span><span class=\"upcoming__item-genre\">${genre_ids}</span></li>\n  </ul>\n  </div>\n  <p class =\"upcoming__movie-about\">About</p>\n  <p class=\"upcoming__item-font-about\">${overview}</p>\n  </div>\n  <button type=\"button\" class=\"upcoming__button\">Remind me</button>\n  </div>\n  </div>`;}).join('');\n}\n\n\n// export function renderUpcomingMovieCard(res){\n//   console.log(res);\n// const movie = res.results[1];\n// const markup = createUpcominfOfNewMovieCard(movie);\n// console.log(markup);\n// refs.galleryOfNewMovies.insertAdjacentHTML('beforeend', markup);\n// const genres =  newMovies.fetchGenres().then(genre => console.log(genre));\n// }\n\n// function upcomingGenre(genre,movie){\n//   let nameGenres =[];\n//   for(let i=0; i< movie.genre_ids.length; i+=1 ){\n//     const item = genre.find(el => el.id === movie.genre_ids[i])\n//     console.log(item);}\n  \n//     nameGenres.push(item.name)\n// }\n\n//  let upcomingMovieId =[];\n//  for (let i=0; i < res.results.length; i +=1) {\n//   const movie = res.results[i]\n//   console.log(movie);\n//   upcomingMovieId.push(movie.genre_ids)\n//  }\n//  console.log(upcomingMovieId);\n\n// function fetchUpcomingGenre(){\n//   return newMovies.fetchGenres()\n// }\n\n// function renderUpcomingGenre(genres){\n//   console.log(genres);\n//   return genres;\n// }","const refs = {\n  openModal: document.querySelector('.open-modal-team'),\n  closeModal: document.querySelector('.close-modal-team'),\n  teamBackdrop: document.querySelector('.backdrop-modal'),\n  teamModal: document.getElementsByClassName('team__modal'),\n};\n\nif (refs.openModal) refs.openModal.addEventListener('click', openModalTeam);\nif (refs.closeModal) refs.closeModal.addEventListener('click', closeModalTeam);\n\nfunction openModalTeam(event) {\n  refs.teamBackdrop.classList.remove('team__backdrop--hidden');\n  document.addEventListener('keydown', onEscapeClose);\n  document.addEventListener('click', onBackdropClose);\n  refs.teamModal[0].classList.add('openModalAnimationTeam');\n  // document.body.style.overflow = 'hidden';\n}\n\nfunction closeModalTeam(event) {\n  refs.teamModal[0].classList.remove('closeModalAnimationTeam');\n  refs.teamBackdrop.classList.add('team__backdrop--hidden');\n  document.removeEventListener('keydown', onEscapeClose);\n  document.body.style.overflow = '';\n}\n\nfunction onEscapeClose(event) {\n  if (event.code === 'Escape') {\n    refs.teamModal[0].classList.remove('openModalAnimationTeam');\n    refs.teamModal[0].classList.add('closeModalAnimationTeam');\n    setTimeout(() => {\n      closeModalTeam();\n    }, 400);\n    closeModalTeam();\n  }\n}\n\nfunction onBackdropClose(event) {\n  if (event.target === refs.teamBackdrop) {\n    refs.teamModal[0].classList.remove('openModalAnimationTeam');\n    refs.teamModal[0].classList.add('closeModalAnimationTeam');\n    setTimeout(() => {\n      closeModalTeam();\n    }, 400);\n  }\n}\n"],"names":["$56ca17bb174b0ce3$export$2e2bcd8739ae039","constructor","this","page","nextPage","prevPage","setPage","value","getCurrentPage","reset","async","response","fetch","json","error","Error","id","str","Promise","r","setTimeout","then","res","genres","obj","keys","Object","length","key","document","querySelector","$d395fb91404b7f70$var$weeklyTrendsApi","$d395fb91404b7f70$var$refs","rating","querySelectorAll","wrapper","gallery","$d395fb91404b7f70$var$initRating","ratingActive","ratingValue","forEach","item","addEventListener","innerHTML","$d395fb91404b7f70$var$setRatingActiveWidth","ratingActiveWidth","style","width","movies","weekTrends","results","slice","fetchGenres","moviesElements","map","movie","poster_path","title","vote_average","release_date","genre_ids","voteAverage","release","Date","getFullYear","filter","genre","includes","name","join","index","$d395fb91404b7f70$var$initRatings","console","$d395fb91404b7f70$var$renderWeeklyTrends","log","mobileMenu","headerContainer","openMenuBtn","body","getElementsByTagName","linkButton","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","button","e","target","currentTarget","window","matchMedia","matches","add","remove","html","documentElement","savedTheme","localStorage","getItem","switcher","checked","theme","className","setItem","pageLinks","pageLinksMobile","currentPath","location","href","link","$65414923e0a79c46$var$refs","galleryOfNewMovies","remindBtn","$65414923e0a79c46$export$b31ccb6f873ec7de","markup","backdrop_path","original_title","vote_count","popularity","overview","insertAdjacentHTML","upcoming","catch","er","message","$53c8cd70eab94c2b$var$refs","openModal","closeModal","teamBackdrop","teamModal","getElementsByClassName","$53c8cd70eab94c2b$var$closeModalTeam","event","removeEventListener","$53c8cd70eab94c2b$var$onEscapeClose","overflow","code","$53c8cd70eab94c2b$var$onBackdropClose"],"version":3,"file":"index.4d415205.js.map"}