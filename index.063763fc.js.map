{"mappings":"AAGA,MAAMA,EAAkB,ICAT,MAGbC,mBACE,IACE,MAAMC,QAAiBC,MAAM,6FAE7B,aADmBD,EAASE,M,CAE5B,MAAOC,GACP,MAAM,IAAIC,MAAM,8BAAgCD,E,EARpDE,cAAc,GDAVC,EAAY,IEDH,MAGbP,oBACE,IACE,MAAMC,QAAiBC,MACrB,2FAGF,aADmBD,EAASE,QAChBK,M,CACZ,MAAOJ,GACP,MAAM,IAAIC,MAAM,+BAAiCD,E,EAVrDE,cAAc,GFEVG,EAASC,SAASC,iBAAiB,WAMzC,SAASC,IACP,IAAK,IAAIC,EAAQ,EAAGA,EAAQJ,EAAOK,OAAQD,IAAS,CAElDE,EADsBN,EAAOI,G,EAKjC,SAASE,EAAWC,GAClB,MAAMC,EAAeD,EAAOE,cAAc,mBACpCC,EAAcH,EAAOE,cAAc,kBACrBF,EAAOL,iBAAiB,iBAChCS,SAAQC,IAClBA,EAAKC,iBAAiB,SAAS,KAC7BH,EAAYI,UAAYF,EAAKG,MAC7BC,EAAqBR,EAAcE,EAAY,GAC/C,IAEJM,EAAqBR,EAAcE,E,CAGrC,SAASM,EAAqBR,EAAcE,GAC1C,MAAMO,EAAoBP,EAAYI,UAAY,KAClDN,EAAaU,MAAMC,MAAQ,GAAGF,I,CA1B5BjB,EAAOK,OAAS,GAClBF,IA4BFZ,iBACE,IACE,MACM6B,SADa9B,EAAgB+B,cACfC,QAAQC,MAAM,EAAG,GAE/BC,EAAUvB,SAASQ,cAAc,kBACjCV,QAAeD,EAAU2B,cAEzBC,EAAiBN,EAAOO,KAAIC,IAChC,MAAMC,YAAEA,EAAWC,MAAEA,EAAKC,aAAEA,EAAYC,aAAEA,EAAYC,UAAEA,GACtDL,EAEIM,EAAcH,EACdI,EAAU,IAAIC,KAAKJ,GAAcK,cAQvC,MAAO,mGAJUR,EACb,mCAAmCA,IACnC,6DAKiDC,wFAEvBA,wFAZV/B,EACjBuC,QAAOC,GAASN,EAAUO,SAASD,EAAME,MACzCd,KAAIY,GAASA,EAAMG,OAabnB,MAAM,EAAG,GACToB,KAAK,WAAWR,+sBAaYD,0HAOpC,IAGHV,EAAQV,UAAYY,EAAeiB,KAAK,IACxCxC,G,CACA,MAAOR,GACPiD,QAAQjD,MAAMA,E,EAIlBkD","sources":["src/js/weekly-trends/weeklyTrends.js","src/js/weekly-trends/WeeklyApi.js","src/js/weekly-trends/GenresApi.js"],"sourcesContent":["import WeeklyTrendsApi from './WeeklyApi';\nimport GenresApi from './GenresApi';\n\nconst weeklyTrendsApi = new WeeklyTrendsApi();\nconst genresApi = new GenresApi();\n\nconst rating = document.querySelectorAll('.rating');\n\nif (rating.length > 0) {\n  initRatings();\n}\n\nfunction initRatings() {\n  for (let index = 0; index < rating.length; index++) {\n    const ratingElement = rating[index];\n    initRating(ratingElement);\n  }\n}\n\nfunction initRating(rating) {\n  const ratingActive = rating.querySelector('.rating__active');\n  const ratingValue = rating.querySelector('.rating__value');\n  const ratingItems = rating.querySelectorAll('.rating__item');\n  ratingItems.forEach(item => {\n    item.addEventListener('click', () => {\n      ratingValue.innerHTML = item.value;\n      setRatingActiveWidth(ratingActive, ratingValue);\n    });\n  });\n  setRatingActiveWidth(ratingActive, ratingValue);\n}\n\nfunction setRatingActiveWidth(ratingActive, ratingValue) {\n  const ratingActiveWidth = ratingValue.innerHTML / 0.025;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n\nasync function renderWeeklyTrends() {\n  try {\n    const data = await weeklyTrendsApi.fetchMovie();\n    const movies = data.results.slice(0, 3);\n\n    const wrapper = document.querySelector('.article__list');\n    const genres = await genresApi.fetchGenres();\n\n    const moviesElements = movies.map(movie => {\n      const { poster_path, title, vote_average, release_date, genre_ids } =\n        movie;\n\n      const voteAverage = vote_average;\n      const release = new Date(release_date).getFullYear();\n      const movieGenres = genres\n        .filter(genre => genre_ids.includes(genre.id))\n        .map(genre => genre.name);\n      const imageUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n        : 'https://via.placeholder.com/395x574?text=No+Image';\n\n      return `\n        <li class=\"article__item\">\n        <article>\n        <img class=\"article__img\" src=\"${imageUrl}\" alt=\"${title}\" width=\"395\" >\n          <div class=\"details\">\n            <p class=\"title__txt\">${title}</p>\n            <div class=\"wraper__details\">\n            <p class=\"movieGenres\">${movieGenres\n              .slice(0, 2)\n              .join(', ')} | ${release}</p>\n            \n            <div class=\"rating\">\n              <div class=\"rating__body\">\n                <div class=\"rating__active\"></div>\n                <div class=\"rating__items\">\n                  <input type=\"radio\" class=\"rating__item\" value=\"1\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"2\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"3\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"4\" name=\"rating\" />\n                  <input type=\"radio\" class=\"rating__item\" value=\"5\" name=\"rating\" />\n                </div>\n              </div>\n              <div class=\"rating__value\">${voteAverage}</div>\n            </div>\n            </div>\n          </div>\n        </article>\n          \n        </li>\n      `;\n    });\n\n    wrapper.innerHTML = moviesElements.join('');\n    initRatings();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nrenderWeeklyTrends();\n","const MOVIE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst API_KEY = 'bc9d399f277e750e98559ead1436749b';\n\nexport default class WeeklyTrendsApi {\n  constructor() {}\n\n  async fetchMovie() {\n    try {\n      const response = await fetch(`${MOVIE_URL}?api_key=${API_KEY}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error('Error fetching movie data: ' + error);\n    }\n  }\n}\n","const MOVIE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bc9d399f277e750e98559ead1436749b';\n\nexport default class GenresApi {\n  constructor() {}\n  \n  async fetchGenres() {\n    try {\n      const response = await fetch(\n        `${MOVIE_URL}/genre/movie/list?api_key=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.genres;\n    } catch (error) {\n      throw new Error('Error fetching genres data: ' + error);\n    }\n  }\n}\n"],"names":["$87bcd9146f618cfc$var$weeklyTrendsApi","async","response","fetch","json","error","Error","constructor","$87bcd9146f618cfc$var$genresApi","genres","$87bcd9146f618cfc$var$rating","document","querySelectorAll","$87bcd9146f618cfc$var$initRatings","index","length","$87bcd9146f618cfc$var$initRating","rating1","ratingActive","querySelector","ratingValue","forEach","item","addEventListener","innerHTML","value","$87bcd9146f618cfc$var$setRatingActiveWidth","ratingActiveWidth","style","width","movies","fetchMovie","results","slice","wrapper","fetchGenres","moviesElements","map","movie","poster_path","title","vote_average","release_date","genre_ids","voteAverage","release","Date","getFullYear","filter","genre","includes","id","name","join","console","$87bcd9146f618cfc$var$renderWeeklyTrends"],"version":3,"file":"index.063763fc.js.map"}