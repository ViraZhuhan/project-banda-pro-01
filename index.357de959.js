document.querySelector("body"),document.querySelector(".modal__close-btn"),document.querySelector(".modal"),document.querySelector(".backdrop"),document.querySelector(".team__modal-open"),document.querySelector('[data-action="deleted-class"]'),document.querySelector(".footer-modal__close-btn"),document.querySelector("button[name=watched]");const e=new class{nextPage(){this.page+=1}prevPage(){this.page-=1}setPage(e){this.page=e}getCurrentPage(){return this.page}reset(){this.page=1}async dayTrends(){try{const e=await fetch(`https://api.themoviedb.org/3/trending/all/dayRoute?api_key=225e339996bc91260b33199c383c8881&page=${this.page}`);return await e.json()}catch(e){throw new Error("Error fetching movie data: "+e)}}async weekTrends(){try{const e=await fetch(`https://api.themoviedb.org/3/trending/all/week?api_key=225e339996bc91260b33199c383c8881&page=${this.page}`);return await e.json()}catch(e){throw new Error("Error fetching movie data: "+e)}}async upcoming(){try{const e=await fetch(`https://api.themoviedb.org/3/all/upcoming?api_key=225e339996bc91260b33199c383c8881&page=${this.page}`);return await e.json()}catch(e){throw new Error("Error fetching movie data: "+e)}}async getDetailsById(e){const t=`https://api.themoviedb.org/3/movie/${e}?api_key=225e339996bc91260b33199c383c8881`;return await new Promise((e=>setTimeout(e,1e3))),fetch(t).then((e=>e.json()))}async fetchGenres(){try{const e=await fetch("https://api.themoviedb.org/3//genre/movie/list?api_key=225e339996bc91260b33199c383c8881");return(await e.json()).genres}catch(e){throw new Error("Error fetching genres data: "+e)}}async countries(){return await new Promise((e=>setTimeout(e,1e3))),fetch(`https://api.themoviedb.org/3/configuration/countries?api_key=225e339996bc91260b33199c383c8881&page=${this.page}`).then((e=>e.json()))}async searhByNameYear(e={}){let t="https://api.themoviedb.org/3/search/movie?api_key=225e339996bc91260b33199c383c8881&language=en-US&include_adult=false";const a=Object.keys(e);if(0!==a.length)for(const n of a)null!==(("year"===n||"query"===n||"page"===n)&&e[n])&&(t+=`&${n}=${e[n]}`);return await new Promise((e=>setTimeout(e,1e3))),fetch(t).then((e=>e.json()))}constructor(){this.page=1}},t={rating:document.querySelectorAll(".rating"),wrapper:document.querySelector(".article__list"),gallery:document.querySelector(".gallery")};function a(e){const t=e.querySelector(".rating__active"),a=e.querySelector(".rating__value");e.querySelectorAll(".rating__item").forEach((e=>{e.addEventListener("click",(()=>{a.innerHTML=e.value,n(t,a)}))})),n(t,a)}function n(e,t){const a=t.innerHTML/.025;e.style.width=`${a}%`}!async function(){try{const n=(await e.weekTrends()).results.slice(0,3),o=await e.fetchGenres(),i=n.map((e=>{const{poster_path:t,title:a,vote_average:n,release_date:i,genre_ids:r}=e,c=n,s=new Date(i).getFullYear();return`\n        <li class="article__item">\n        <article>\n        <img class="article__img" src="${t?`https://image.tmdb.org/t/p/w500/${t}`:"https://via.placeholder.com/395x574?text=No+Image"}" alt="${a}" width="395" >\n          <div class="details">\n            <p class="title__txt">${a}</p>\n            <div class="wraper__details">\n            <p class="movieGenres">${o.filter((e=>r.includes(e.id))).map((e=>e.name)).slice(0,2).join(", ")} | ${s}</p>\n            \n            <div class="rating">\n              <div class="rating__body">\n              <div class="rating__active" style="width: ${10*c}%;"></div>>\n                <div class="rating__items">\n                  <input type="radio" class="rating__item" value="1" name="rating" />\n                  <input type="radio" class="rating__item" value="2" name="rating" />\n                  <input type="radio" class="rating__item" value="3" name="rating" />\n                  <input type="radio" class="rating__item" value="4" name="rating" />\n                  <input type="radio" class="rating__item" value="5" name="rating" />\n                </div>\n              </div>\n              <div class="rating__value">${c}</div>\n            </div>\n            </div>\n          </div>\n        </article>\n          \n        </li>\n      `}));t.wrapper.innerHTML=i.join(""),function(){if(t.rating.length>0)for(let e=0;e<t.rating.length;e++)a(t.rating[e])}()}catch(e){console.error(e)}}();const o={openModal:document.querySelector(".open-modal-team"),closeModal:document.querySelector(".close-modal-team"),teamBackdrop:document.querySelector(".backdrop-modal"),teamModal:document.getElementsByClassName("team__modal")};function i(e){o.teamModal[0].classList.remove("closeModalAnimationTeam"),o.teamBackdrop.classList.add("team__backdrop--hidden"),document.removeEventListener("keydown",r),document.body.style.overflow=""}function r(e){"Escape"===e.code&&(o.teamModal[0].classList.remove("openModalAnimationTeam"),o.teamModal[0].classList.add("closeModalAnimationTeam"),setTimeout((()=>{i()}),400),i())}function c(e){e.target===o.teamBackdrop&&(o.teamModal[0].classList.remove("openModalAnimationTeam"),o.teamModal[0].classList.add("closeModalAnimationTeam"),setTimeout((()=>{i()}),400))}o.openModal&&o.openModal.addEventListener("click",(function(e){o.teamBackdrop.classList.remove("team__backdrop--hidden"),document.addEventListener("keydown",r),document.addEventListener("click",c),o.teamModal[0].classList.add("openModalAnimationTeam")})),o.closeModal&&o.closeModal.addEventListener("click",i);
//# sourceMappingURL=index.357de959.js.map
